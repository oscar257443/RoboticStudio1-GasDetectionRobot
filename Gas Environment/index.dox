/*!

*/

// without this gap between two doxygen definition, the last group does not get
// populated properly for some reason.

/*!
@mainpage RS1: Gas Detection robot

The goal of this project is to simulate a autonomous turtlebot3 to detect gas within a custom made environment. \n
Due to doxygen's incompatability with launch and world files, below are brief descriptions of the their function.

@subsection gas_worldv3 Launch File
The launch file for spawning a TurtleBot3 robot model in Gazebo. \n
This launch file is responsible for spawning a TurtleBot3 robot model in a Gazebo simulation environment.


<b> Code: </b> \n
<launch>

  <b> Define arguments for the turtlebot model </b> \n
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/> \n
  <b> Set the turtlebot's initial position </b> \n
  <arg name="x_pos" default="0.0"/> \n
  <arg name="y_pos" default="0.0"/> \n
  <arg name="z_pos" default="0.0"/> \n

  <b> Includes empty_world.launch which is responsible for setting up an empty gazebo world </b> \n
  <include file="$(find gazebo_ros)/launch/empty_world.launch"> \n
    <b> Selects the environment gas_worldv3 </b> \n
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/gas_worldv3.world"/> \n
    <arg name="paused" value="false"/> \n
    <arg name="use_sim_time" value="true"/> \n
    <arg name="gui" value="true"/> \n
    <arg name="headless" value="false"/> \n
    <arg name="debug" value="false"/> \n

  <b> Spawn the turtlebot model in Gazebo </b> \n
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" /> \n
</launch> \n


@subsection gas_world World File
This file essentially is the code that defines a Gazebo simulation world. It contains various data which provides the specific position and orientation \n
of the environment such as the light source (the sun), a ground plane, models representing walls, and the pipe. The world also specifies physical properties \n
like collision, gravity, atmospheric conditions, and physics simulation parameters. 

*/
